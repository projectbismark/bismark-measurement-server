#!/bin/sh
#
# bismark-mserver Start/stop the BISmark measurement server tools
#
# chkconfig:   - 99 1
# description: BISmark measurement server, provides tools to source and sink \
#              traffic for measurements to BISmark home router devices.

### BEGIN INIT INFO
# Provides:
# Required-Start: $local_fs $network $named crond
# Required-Stop: $local_fs $network $named
# Short-Description: BISmark measurement server.
# Description: BISmark measurement server, provides tools to source and sink
#              traffic for measurements to BISmark home router devices.
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

# Source config file for lockfile name
. /etc/bismark-mserver.conf

exec="/usr/bin/bismark-mserver"
prog="bismark-mserver"
config="/etc/bismark-mserver.conf"

# keep rpmlint happy
lockfile="/var/lock/subsys/bismark-mserver"
[ $lockfile != $MSERVER_LOCKFILE ] && \
        echo "$0: lockfile inconsistent with MSERVER_LOCKFILE."

start() {
    [ -x $exec ] || exit 5
    [ -f $config ] || exit 6
    echo "Starting $prog: "
    touch $MSERVER_LOCKFILE
    /usr/bin/bismark-mserver-hostsallow
    /usr/bin/bismark-mserver run
    return 0
}

stop() {
    echo "Stopping $prog: "
    rm -f $MSERVER_LOCKFILE
    /usr/bin/bismark-mserver stop
    return 0
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    # run checks to determine if the service is running or use generic status
    # status $prog

    # poor man's status check based on lock file and knowledge of cron
    if [ -f $MSERVER_LOCKFILE ]; then
        echo "$prog is running."
        return 0
    else
        echo "$prog is stopped."
        return 3
    fi
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo "Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?
